// *********************** Общий модуль для взаимодействия с SQLite базой сайта **********************************************
//
// Модуль использует внешний источник данных SQLite. Строка соединения с ним: 
// 		"Driver={SQLite3 ODBC Driver};Database=C:\Users\Andreysy4\Desktop\222\server\DataBase\personalAccount.db;"
//
// Данный модуль используется в обработчике ожидания на получение Индивидуальных планов.
// Фунционал описан в ОбщийМОдуль_Клиент -> Область Формирования_АвтоОбновления
//					  ОбщиеФункции -> Область ПолучениеДанныхДляАвтоОбновленияСотрудников
//					  СерверныеМеханизмы -> Область АвтообновлениеДанныхВебКабинета
//
// Функциионал используется в командах на ФормеСписка справочника Сотрудники + Обработчик ожидани
//
// ВСЕ модификации (в виде схемы) описаны в текстовом файле Кабинет_1С.txt 
// ***************************************************************************************************************************

#Область ИндивидуальныеПланы

// Заполнение таблицы PlansRate. Вносятся ФИО, кафедра и ставки преподавателя
Процедура ЗаполнитьСписокСтавок() Экспорт
	ПараметрыСоединения = Новый ПараметрыСоединенияВнешнегоИсточникаДанных; 
	ПараметрыСоединения.СтрокаСоединения = "Driver={SQLite3 ODBC Driver};Database=C:\Users\Andreysy4\Desktop\222\server\DataBase\personalAccount.db;";
	ВнешниеИсточникиДанных.CabinetBSUIR.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
	ВнешниеИсточникиДанных.CabinetBSUIR.УстановитьСоединение();
	ВнешниеИсточникиДанных.CabinetBSUIR.PR_clearTable();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИндивидуальныеПланыКафедр.Перерасчет,
		|	ИндивидуальныеПланыКафедр.ВидПлана,
		|	ИндивидуальныеПланыКафедр.Сотрудник,
		|	ИндивидуальныеПланыКафедр.Кафедра
		|ИЗ
		|	РегистрНакопления.ИндивидуальныеПланыКафедр КАК ИндивидуальныеПланыКафедр
		|ГДЕ
		|	ИндивидуальныеПланыКафедр.Перерасчет.ДатаПерерасчета В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				Перерасчеты.ДатаПерерасчета КАК ДатаПерерасчета
		|			ИЗ
		|				Справочник.Перерасчеты КАК Перерасчеты
		|			УПОРЯДОЧИТЬ ПО
		|				ДатаПерерасчета УБЫВ)
		|	И ИндивидуальныеПланыКафедр.Сотрудник.Наименование <> """"
		|	И ИндивидуальныеПланыКафедр.ВидПлана <> ЗНАЧЕНИЕ(перечисление.ВидПлана.ПустаяСсылка)
		|	И ИндивидуальныеПланыКафедр.Кафедра.Наименование <> ""ФМД""
		|			И ИндивидуальныеПланыКафедр.Кафедра.Наименование <> ""ИСИТ""
		|			И ИндивидуальныеПланыКафедр.Кафедра.Наименование <> ""ПЭ""
		|			И ИндивидуальныеПланыКафедр.Кафедра.Наименование <> ""МПСС""";  
	ТЗ = Запрос.Выполнить().Выгрузить();
	Номер = 0;
	Для Каждого СТЗ Из ТЗ Цикл
		ВнешниеИсточникиДанных.CabinetBSUIR.PR_insert(Номер, СТЗ.Сотрудник.Наименование, Строка(Метаданные.Перечисления.ВидПлана.ЗначенияПеречисления[Перечисления.ВидПлана.Индекс(СТЗ.ВидПлана)].Имя), СТЗ.Кафедра.Наименование);
		Номер = Номер + 1;
	КонецЦикла;
	ВнешниеИсточникиДанных.CabinetBSUIR.РазорватьСоединение();
КонецПроцедуры

// Процедура обращается к таблице PlansRate и анализирует поле request
// Если поле не пустое, то формируется индивидуальный план. Флаг request сбрасывается
Процедура ПолучитьСписокЗапросов() Экспорт
	Сообщить("План");
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыСоединения = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
	ПараметрыСоединения.СтрокаСоединения = "Driver={SQLite3 ODBC Driver};Database=C:\Users\Andreysy4\Desktop\222\server\DataBase\personalAccount.db;";
	ВнешниеИсточникиДанных.CabinetBSUIR.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения); // Туть
	ВнешниеИсточникиДанных.CabinetBSUIR.УстановитьСоединение();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	plansRate.id КАК Идентификатор,
	|	plansRate.employee КАК Сотрудник,
	|	plansRate.rate КАК Ставка,
	|	plansRate.department КАК Кафедра,
	|	plansRate.request КАК ЗапросДанных
	|ИЗ
	|	ВнешнийИсточникДанных.CabinetBSUIR.Таблица.plansRate КАК plansRate
	|ГДЕ
	|	plansRate.request ЕСТЬ НЕ NULL 
	|	И plansRate.request <> """"";
	ТЗ_Результат = Запрос.Выполнить().Выгрузить();
	Если ТЗ_Результат.Количество() <> 0 Тогда
		Для Каждого СТЗ Из ТЗ_Результат Цикл
		СформироватьИндПлан(СТЗ.Сотрудник, СТЗ.Ставка, СТЗ.Кафедра);
		ВнешниеИсточникиДанных.CabinetBSUIR.PR_clearReq(СТЗ.Идентификатор);
		КонецЦикла;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	ВнешниеИсточникиДанных.CabinetBSUIR.РазорватьСоединение();
	Сообщить("КонецПлана");
КонецПроцедуры

// Формирует PDF файл индивидуального плана для сотрудника
// Параметры:
// 			ФИО		  		- Строка              - ФИО сотрудника через пробел. Для справочника Сотрудники ФИО - Наименование
// 			ВидПлана		- Строка              - вид индивидуального плана (Ставка, 0.5, 0,25 совм)
// 			Кафедра  		- Строка              - кафедра на которую нужно сформировать индивидуальный план
Процедура СформироватьИндПлан(ФИО, ВидПлана, Кафедра) Экспорт
	ТабДок = Новый ТабличныйДокумент;
	Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(ФИО);
	НаСтавку = ПредопределенноеЗначение("Перечисление.ВидПлана." + ВидПлана);
	Если Строка(Кафедра) = "Ин.Яз. 1" Тогда
		ДополнениеКЗапросу = "ИнЯз1";
	ИначеЕсли Строка(Кафедра) = "Ин.Яз. 2" Тогда
		ДополнениеКЗапросу = "ИнЯз2";
	ИначеЕсли Строка(Кафедра) = "ИКТ" Тогда
		ДополнениеКЗапросу = "СиУТ";
	ИначеЕсли Строка(Кафедра) = "ИКГ" Тогда
		ДополнениеКЗапросу = "ИГ";	
	Иначе 
		ДополнениеКЗапросу = Строка(Кафедра);
	КонецЕсли;
	ТабДок.РазмерСтраницы = "A3";
	ТабДок.Автомасштаб = истина; // Вывод по размеру страни
	ТабДок.Очистить();

	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;  // ОриентацияСтраницы.Ландшафт - альбомный выриант
	// Функции для определения сотрудника и ВидаПлана (ставка, полставки и т.д.) для вывода ИндПлана на печать с отбором
	Макет = Обработки.ОптимизацияИПлана.ПолучитьМакет("ИндивидуальныйПлан");
	ОблЗаставка = Макет.ПолучитьОбласть("Заставка");
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ОблТЧ = Макет.ПолучитьОбласть("ТЧ");
	ОблОсень = Макет.ПолучитьОбласть("Осень");
	ОблОсенниеСеместры = Макет.ПолучитьОбласть("ОсенниеСеместры");
	ОблОсеньИтог = Макет.ПолучитьОбласть("ОсеньИтог");
	ОблВесна = Макет.ПолучитьОбласть("Весна");
	ОблВесенниеСеместры = Макет.ПолучитьОбласть("ВесенниеСеместры");
	ОблВеснаИтог = Макет.ПолучитьОбласть("ВеснаИтог");
	ОблУчГодИтог = Макет.ПолучитьОбласть("УчГодИтог");
	
	//*******************************************************
#Область Формирования_Запроса	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИндивидуальныеПланыКафедр.ФормаОбучения,
	|	ИндивидуальныеПланыКафедр.Специальность.Факультет КАК Факультет,
	|	ИндивидуальныеПланыКафедр.Ссылка.Кафедра1.Название КАК НазваниеКафедры,
	|	ИндивидуальныеПланыКафедр.УчНомПлана КАК УчНомПлана,
	|	ИндивидуальныеПланыКафедр.НомерДоговора КАК НомДог,
	|	ИндивидуальныеПланыКафедр.НомерДоговораИзПочОплаты КАК НомДогПочОпл,
	|	ИндивидуальныеПланыКафедр.Дисциплина,
	|	ИндивидуальныеПланыКафедр.Сотрудник,
	|	ВЫБОР
	|		КОГДА ИндивидуальныеПланыКафедр.ФормаОбучения = ЗНАЧЕНИЕ(Перечисление.ФормаОбучения.АспирантураДневФорма)
	|				ИЛИ ИндивидуальныеПланыКафедр.ФормаОбучения = ЗНАЧЕНИЕ(Перечисление.ФормаОбучения.АспирантураЗаочнФорма)
	|				ИЛИ ИндивидуальныеПланыКафедр.ФормаОбучения = ЗНАЧЕНИЕ(Перечисление.ФормаОбучения.АспирантураИнГраждане)
	|				ИЛИ ИндивидуальныеПланыКафедр.ФормаОбучения = ЗНАЧЕНИЕ(Перечисление.ФормаОбучения.АспирантураСоискатели)
	|			ТОГДА ИндивидуальныеПланыКафедр.Специальность.КодСпециальности.Наименование
	|		ИНАЧЕ ИндивидуальныеПланыКафедр.Специальность
	|	КОНЕЦ КАК Специальность,
	|	ИндивидуальныеПланыКафедр.НомераГрупп,
	|	ИндивидуальныеПланыКафедр.НомерГруппы,
	|	ИндивидуальныеПланыКафедр.ЧислоСтудентов,
	|	ИндивидуальныеПланыКафедр.ЛкУст КАК ЛКУст,
	|	ИндивидуальныеПланыКафедр.ЛБУст КАК ЛБУст,
	|	ИндивидуальныеПланыКафедр.ПЗУст КАК ПЗУст,
	|	ИндивидуальныеПланыКафедр.Лк КАК Лк,
	|	ИндивидуальныеПланыКафедр.ПЗ КАК ПЗ,
	|	ИндивидуальныеПланыКафедр.ЛкУст + ИндивидуальныеПланыКафедр.Лк КАК ВсегоЛекции,
	|	ИндивидуальныеПланыКафедр.ЛБУст + ИндивидуальныеПланыКафедр.ЛБ КАК ВсегоЛБ,
	|	ИндивидуальныеПланыКафедр.ПЗУст + ИндивидуальныеПланыКафедр.ПЗ КАК ВсегоПЗ,
	|	ИндивидуальныеПланыКафедр.ЛБ КАК ЛБ,
	|	ИндивидуальныеПланыКафедр.Курс КАК Курс,
	|	ИндивидуальныеПланыКафедр.Сем КАК Сем,
	|	ИндивидуальныеПланыКафедр.ИПР КАК ИПР,
	|	ИндивидуальныеПланыКафедр.КП КАК КП,
	|	ИндивидуальныеПланыКафедр.ТР КАК ТР,
	|	ИндивидуальныеПланыКафедр.РР КАК РР,
	|	ИндивидуальныеПланыКафедр.КонтрР КАК КонтрР,
	|	ИндивидуальныеПланыКафедр.КР КАК КР,
	|	ИндивидуальныеПланыКафедр.КСР КАК КСР,
	|	ИндивидуальныеПланыКафедр.КонсТек КАК КонсТек,
	|	ИндивидуальныеПланыКафедр.КонсИнд КАК КонсИнд,
	|	ИндивидуальныеПланыКафедр.КонсЭкз КАК КонсЭкз,
	|	ИндивидуальныеПланыКафедр.КонсТек + ИндивидуальныеПланыКафедр.КонсИнд + ИндивидуальныеПланыКафедр.КонсЭкз КАК Консульт,
	|	ИндивидуальныеПланыКафедр.Зач КАК Зач,
	|	ИндивидуальныеПланыКафедр.Экз КАК Экз,
	|	ИндивидуальныеПланыКафедр.ДПиГЭК КАК ДПиГЭК,
	|	ИндивидуальныеПланыКафедр.Практики КАК Практики,
	|	ИндивидуальныеПланыКафедр.Аспирантура КАК Аспирантура,
	|	ИндивидуальныеПланыКафедр.Магистратура КАК Магистратура,
	|	ИндивидуальныеПланыКафедр.Всего КАК Всего,
	|	ИндивидуальныеПланыКафедр.ВидПлана,
	|	ИндивидуальныеПланыКафедр.Снижение КАК Снижение,
	|	ИндивидуальныеПланыКафедр.ВсегоПоДисциплине КАК ВсегоПоДисциплине,
	|	ИндивидуальныеПланыКафедр.Прим КАК Выполнен,
	|	ИндивидуальныеПланыКафедр.ОбъединенныеГруппы,
	|	ИндивидуальныеПланыКафедр.Примечание,
	|	ВЫБОР
	|		КОГДА ИндивидуальныеПланыКафедр.Сем = ""1""
	|				ИЛИ ИндивидуальныеПланыКафедр.Сем = ""3""
	|				ИЛИ ИндивидуальныеПланыКафедр.Сем = ""5""
	|				ИЛИ ИндивидуальныеПланыКафедр.Сем = ""7""
	|				ИЛИ ИндивидуальныеПланыКафедр.Сем = ""9""
	|			ТОГДА ""Осенний""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИндивидуальныеПланыКафедр.Сем = ""2""
	|						ИЛИ ИндивидуальныеПланыКафедр.Сем = ""4""
	|						ИЛИ ИндивидуальныеПланыКафедр.Сем = ""6""
	|						ИЛИ ИндивидуальныеПланыКафедр.Сем = ""8""
	|						ИЛИ ИндивидуальныеПланыКафедр.Сем = ""10""
	|					ТОГДА ""Весенний""
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипСеместра
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	Документ.ИндивидуальныеПланыИПиЭ.ПриложениеКДоговору КАК ИндивидуальныеПланыКафедр
	|ГДЕ
	|	ИндивидуальныеПланыКафедр.Сотрудник = &Сотрудник
	|	И ИндивидуальныеПланыКафедр.ВидПлана = &ВидПлана
	|	И ИндивидуальныеПланыКафедр.Ссылка.Перерасчет.ДатаПерерасчета В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				Перерасчеты.ДатаПерерасчета КАК ДатаПерерасчета
	|			ИЗ
	|				Справочник.Перерасчеты КАК Перерасчеты
	|			УПОРЯДОЧИТЬ ПО
	|				ДатаПерерасчета УБЫВ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.ФормаОбучения,
	|	Данные.Факультет,
	|	Данные.НазваниеКафедры,
	|	Данные.УчНомПлана,
	|	Данные.НомДог,
	|	Данные.НомДогПочОпл,
	|	Данные.Дисциплина,
	|	Данные.Сотрудник,
	|	Данные.Специальность,
	|	Данные.НомераГрупп,
	|	Данные.НомерГруппы,
	|	Данные.ЧислоСтудентов,
	|	Данные.ЛКУст,
	|	Данные.ЛБУст,
	|	Данные.ПЗУст,
	|	Данные.Лк,
	|	Данные.ПЗ,
	|	Данные.ВсегоЛекции,
	|	Данные.ВсегоЛБ,
	|	Данные.ВсегоПЗ,
	|	Данные.ЛБ,
	|	Данные.Курс,
	|	Данные.Сем,
	|	Данные.ИПР,
	|	Данные.КП,
	|	Данные.ТР,
	|	Данные.РР,
	|	Данные.КонтрР,
	|	Данные.КР,
	|	Данные.КСР,
	|	Данные.КонсТек,
	|	Данные.КонсИнд,
	|	Данные.КонсЭкз,
	|	Данные.Консульт,
	|	Данные.Зач,
	|	Данные.Экз,
	|	Данные.ДПиГЭК,
	|	Данные.Практики,
	|	Данные.Аспирантура,
	|	Данные.Магистратура,
	|	Данные.Всего,
	|	Данные.ВидПлана,
	|	Данные.Снижение,
	|	Данные.ВсегоПоДисциплине,
	|	Данные.Выполнен,
	|	Данные.ОбъединенныеГруппы,
	|	Данные.Примечание,
	|	Данные.ТипСеместра
	|ИЗ
	|	Данные КАК Данные";
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИПиЭ",ДополнениеКЗапросу);
#КонецОбласти

	Если Строка(Кафедра) = "ИСиТ" или Строка(Кафедра) = "ПЭ" или Строка(Кафедра) = "ФМД" или Строка(Кафедра) = "МПСС" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИндивидуальныеПланыКафедр.НомерДоговораИзПочОплаты КАК НомДогПочОпл,", "");		
	КонецЕсли;

	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ВидПлана", НаСтавку);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	ТЗ_РезультатЗапроса = РезультатЗапроса.Выгрузить();
	
	//****************** Выводим ОблШапка ******************
	ОблШапка.Параметры.ВидПлана = НаСтавку;
	ОблШапка.Параметры.Сотрудник = Сотрудник;
	ОблШапка.Параметры.НазваниеКафедры = Кафедра;
	ТабДок.Вывести(ОблШапка);
	ТабДок.Вывести(ОблТЧ);
	
	//****************** Выводим Осень ******************
	ТабДок.Вывести(ОблОсень);
	НомСтр = 0;
	Отбор = Новый Структура;
	Отбор.Вставить("ТипСеместра", "Осенний");
	ТЗ_РезультатЗапросаОсень = ТЗ_РезультатЗапроса.Скопировать(Отбор);
	Для Каждого Выборка Из ТЗ_РезультатЗапросаОсень Цикл
		НомСтр = НомСтр + 1;
		ОблОсенниеСеместры.Параметры.НомСтр = НомСтр;
		ОблОсенниеСеместры.Параметры.Заполнить(Выборка); 
		Если Выборка.НомДог <> 0 Тогда
			ОблОсенниеСеместры.Параметры.НомДог = "" + Выборка.НомДогПочОпл + "к" + Выборка.НомДог;
		КонецЕсли;
		ТабДок.Вывести(ОблОсенниеСеместры);      
	КонецЦикла;

	ТЗ_РезультатЗапросаОсень.Свернуть("ТипСеместра", "ЛкУст,Лк,ВсегоЛекции,ПЗУст,ПЗ,ВсегоПЗ,ЛБУст,Лб,ВсегоЛБ,Кп,КР,ТР,РР,ИПР,КСР,КонтрР,КонсТек,КонсИнд,КонсЭкз,Консульт,Зач,Экз,Практики,ДПиГЭК,Снижение,Всего");
	Для Каждого Элемент_Осень Из ТЗ_РезультатЗапросаОсень Цикл
		ОблОсеньИтог.Параметры.Заполнить(Элемент_Осень);
		ТабДок.Вывести(ОблОсеньИтог);
	КонецЦикла;

	//****************** Выводим Весну ******************
	ТабДок.Вывести(ОблВесна);
	НомСтр = 0;
	Отбор = Новый Структура;
	Отбор.Вставить("ТипСеместра", "Весенний");
	ТЗ_РезультатЗапросаВесна = ТЗ_РезультатЗапроса.Скопировать(Отбор);
	Для Каждого Выборка Из ТЗ_РезультатЗапросаВесна Цикл
		НомСтр = НомСтр + 1;
		ОблВесенниеСеместры.Параметры.НомСтр = НомСтр;
		ОблВесенниеСеместры.Параметры.Заполнить(Выборка); 
		Если Выборка.НомДог <> 0 Тогда
			ОблОсенниеСеместры.Параметры.НомДог = "" + Выборка.НомДогПочОпл + "к" + Выборка.НомДог;
		КонецЕсли;
		ТабДок.Вывести(ОблВесенниеСеместры);      
	КонецЦикла;
	
	ТЗ_РезультатЗапросаВесна.Свернуть("ТипСеместра", "ЛкУст,Лк,ВсегоЛекции,ПЗУст,ПЗ,ВсегоПЗ,ЛБУст,Лб,ВсегоЛБ,Кп,КР,ТР,РР,ИПР,КСР,КонтрР,КонсТек,КонсИнд,КонсЭкз,Консульт,Зач,Экз,Практики,ДПиГЭК,Снижение,Всего");
	Для Каждого Элемент_Весна Из ТЗ_РезультатЗапросаВесна Цикл
		ОблВеснаИтог.Параметры.Заполнить(Элемент_Весна);
		ТабДок.Вывести(ОблВеснаИтог);
	КонецЦикла;
	
	// *********** Выводим Общие итоги ****************	
	ТЗ_РезультатЗапросаИтог = ТЗ_РезультатЗапроса.Скопировать();
	ТЗ_РезультатЗапросаИтог.Свернуть("", "ЛкУст,Лк,ВсегоЛекции,ПЗУст,ПЗ,ВсегоПЗ,ЛБУст,Лб,ВсегоЛБ,Кп,КР,ТР,РР,ИПР,КСР,КонтрР,КонсТек,КонсИнд,КонсЭкз,Консульт,Зач,Экз,Практики,ДПиГЭК,Снижение,Всего");
	Для Каждого Элемент_Итог Из ТЗ_РезультатЗапросаИтог Цикл
		ОблУчГодИтог.Параметры.Заполнить(Элемент_Итог);
		ТабДок.Вывести(ОблУчГодИтог);
	КонецЦикла;
	
	// *********** Запись в файл по определённому каталогу ****************	
	СоздатьКаталог("C:\Users\Andreysy4\Desktop\222\server\routes\dist\COM\" + ФИО);
	ТабДок.Записать("C:\Users\Andreysy4\Desktop\222\server\routes\dist\COM\" + ФИО + "\" + Кафедра + "_" + ВидПлана + ".pdf", ТипФайлаТабличногоДокумента.PDF);
КонецПроцедуры

// Функция получения ТЗ всех мероприятий конкретного типа
// Параметры:
// 			ТипМероприятия		- Строка
//				Возможные значения:
//				W_research - Научно-Исследовательская
//				W_scienceMet - Научно-методическая
//				W_organization - Организационно-методическая
//				W_education - Воспитательная и идеологическая
Функция ПолучитьВсеМероприятия(ТипМероприятия) Экспорт
	ПараметрыСоединения = Новый ПараметрыСоединенияВнешнегоИсточникаДанных; 
	ПараметрыСоединения.СтрокаСоединения = "Driver={SQLite3 ODBC Driver};Database=C:\Users\Andreysy4\Desktop\222\server\DataBase\personalAccount.db;";
	ВнешниеИсточникиДанных.CabinetBSUIR.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
	ВнешниеИсточникиДанных.CabinetBSUIR.УстановитьСоединение();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	TableName.userId КАК ФИО_Идент,
	|	TableName.event КАК Мероприятие,
	|	TableName.department КАК Кафедра,
	|	TableName.dataStart КАК ДатаНачала,
	|	TableName.dataEnd КАК ДатаОкончания
	|ИЗ
	|	ВнешнийИсточникДанных.CabinetBSUIR.Таблица.TableName КАК TableName";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "TableName", ТипМероприятия);
	ТЗ_РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ВнешниеИсточникиДанных.CabinetBSUIR.РазорватьСоединение();
	Возврат ТЗ_РезультатЗапроса;	
КонецФункции

#КонецОбласти