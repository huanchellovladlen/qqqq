
// Функция получает JSON с web сервиса journal.bsuir.by (students.bsuir.by)
//
// Параметры:
// СтрокаСоединения - Строка - Cтрока для выполнения Get запроса.
// Примерный вид: /api/v1/sheet/listStudentForTrainingDivisionReport?isMag=<0 - студенты, 1 - магистратура>&group=<группа (строка, опционально)>&faculty=<факультет (строка,опционально)> 
//
// Возвращаемое значение:
// JSON - Строка. Вернёт null или "" при ошибке.  
&НаСервереБезКонтекста
Функция ПолучитьJsonСВебСервера(СтрокаСоединения)
	HTTPСоединение = Новый HTTPСоединение("journal.bsuir.by",443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Токен = ПолучитьТокен(HTTPСоединение, "dedyaev", "d120163v");       
	Если Токен = Null Или Токен = "" Тогда
		Сообщить("Сеансовый ключ не выдан. Проверьте логин и пароль");
		Возврат Null;
	КонецЕсли;
		
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Cookie", Токен);							    // Токен выглядит так: JSESSIONID=A7C2136633D7C61FAB362014A7D45A03
	Запрос = Новый HTTPЗапрос(СтрокаСоединения, Заголовки);
	
	Попытка
		Ответ = HTTPСоединение.Получить(Запрос);
	Исключение
		Сообщить("Не удалось установить соединение с web сервисом journal.bsuir.by, хотя токен уже имеется.");
		Возврат Null;
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 Тогда
		Сообщить("Код ответа = " + Ответ.КодСостояния + "; Тело = " + Ответ.ПолучитьТелоКакСтроку());
		Возврат Null;
	КонецЕсли;
	Возврат Ответ.ПолучитьТелоКакСтроку();
КонецФункции

// Функция получает токен (сеансовый ключ) аналогичным образом, как если бы мы авторизовались на портале students.bsuir.by
//
// Параметры:
// HTTPСоединение - HTTPСоединение - объект соединения с journal.bsuir.by по SSL
// ИмяПользователя - Строка - логин пользователя в системе students.bsuir.by
// Пароль - Строка - пароль в системе students.bsuir.by
//
// Возвращаемое значение:
// Токен - Строка. Ключ, по которому нас пускают в journal.bsuir.by. Вернёт null или "" при ошибке 
&НаСервереБезКонтекста
Функция ПолучитьТокен(HTTPСоединение, ИмяПользователя, Пароль)	
	//https://journal.bsuir.by/api/v1/auth/iislogin
	СтрокаСоединения="/api/v1/auth/iislogin";	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	Запрос = Новый HTTPЗапрос(СтрокаСоединения, Заголовки);
	Запрос.УстановитьТелоИзСтроки("{""username"":""" + ИмяПользователя + """,""password"":""" + Пароль + """}");
	
	Попытка
		Ответ = HTTPСоединение.ОтправитьДляОбработки(Запрос);
	Исключение
		Сообщить("Не удалось установить соединение с web сервисом journal.bsuir.by, при получении сеансового ключа.");
		Возврат null;
	КонецПопытки;
	
	Если Ответ.КодСостояния <> 200 Тогда 								// Если произошла какая-либо ошибка.
		// Важно!!! journal.bsuir может вернуть состояние 200, даже если Log или Pass ошибочны
		Сообщить("Ошибка при получении сеансового ключа . Код ответа = " + Ответ.КодСостояния + "; " + Ответ.ПолучитьТелоКакСтроку());
		Возврат null;
	КонецЕсли;
	
	ЗаголовкиОтвета = Ответ.Заголовки.Получить("Set-Cookie");
	ИндексТокена = СтрНайти(ЗаголовкиОтвета, "JSESSIONID");
	Возврат Лев(ЗаголовкиОтвета, 43);
КонецФункции

// Функция получает таблицу значений студенов или магистрантов с web сервиса http://students.bsuir.by/
//
// Параметры:
// Тип - Число - 0 - Студенты; 1 - Магистранты
// Группа - Строка - Опционально. Отбор по конкретной группе. По умолчанию не учитывается при запросе
// Факультет - Строка - Опционально. Отбор по факультету. По умолчанию не учитывается при запросе 
//
// Возвращаемое значение:
// ТаблицаЗначений - ТаблицаЗначений. Возвращает заполенную студентами или магистрантами таблицу. Если не заполнена, то проверь параметры, которые передавались в функцию 
&НаСервереБезКонтекста
Функция ЗагрузитьТЗСтуденовССайта(Тип, Группа = 0, Факультет = 0)
	//https://journal.bsuir.by/api/v1/sheet/listStudentForTrainingDivisionReport?isMag=<0 - студенты, 1 - магистратура>&group=<группа (строка, опционально)>&faculty=<факультет (строка,опционально)>
	СтрокаСоединения = "/api/v1/sheet/listStudentForTrainingDivisionReport?isMag=" + Тип;
	Если Группа <> 0 Тогда 
		СтрокаСоединения = СтрокаСоединения + "&group=" + Группа;
	КонецЕсли;
	Если Факультет <> 0 Тогда 
		СтрокаСоединения = СтрокаСоединения + "&faculty=" + Факультет;
	КонецЕсли;
	
	JsonОтвет = ПолучитьJsonСВебСервера(СтрокаСоединения);
	
	// ----- Запись -----
	//ТекстовыйДокИзФайла = Новый ТекстовыйДокумент;
	//ТекстовыйДокИзФайла.ДобавитьСтроку(JsonОтвет);
	//ТекстовыйДокИзФайла.Записать("C:\Users\andreysy4\Desktop\Студ.txt", КодировкаТекста.UTF8);
	// ----- Чтение -----
	//ПутьКФайлу = "C:\Users\andreysy4\Desktop\Студ.txt"; 
	//ТекстовыйФайл = Новый ТекстовыйДокумент;
	//ТекстовыйФайл.Прочитать(ПутьКФайлу, КодировкаТекста.UTF8,);
	//JsonОтвет = ТекстовыйФайл.ПолучитьТекст();
	
	ТЗОтвета = Новый ТаблицаЗначений;
	Если JsonОтвет = Null Или JsonОтвет = "" Тогда 
		Возврат ТЗОтвета;
	КонецЕсли;	
	ТЗОтвета.Колонки.Добавить("ФИО", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("УчебныйСтатус", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ГодНабора", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("КонтактныйТелефон", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ЭлектроннаяПочта", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ФормаОбучения", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("Факультет", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("НомерГруппы", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ВидОплаты", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("Пол", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ГодРождения", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("СемейноеПоложение", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("АдресМестаЖительства", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("НомерПриказа", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ДатаПриказа", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ДатаУходаВАО", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ДатаВозвратаИзАО", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("Причина", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("НаличиеТестирования", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("Гражданство", Новый ОписаниеТипов("Строка"));
	ТЗОтвета.Колонки.Добавить("ПланРБ", Новый ОписаниеТипов("Строка"));
		
	// Заполнение ТзОтвета из Json строки
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(JsonОтвет);
	Пока ЧтениеJSON.Прочитать() Цикл
		Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоОбъекта Тогда
			НоваяСтрока = ТЗОтвета.Добавить();
			Для Счётчик = 0 По ТЗОтвета.Колонки.Количество() - 1 Цикл
				ЧтениеJSON.Прочитать(); 			// Пропускаем, т.к. это имя свойства
				ЧтениеJSON.Прочитать();				// А вот тут уже само значение
				НоваяСтрока.Установить(Счётчик, ЧтениеJSON.ТекущееЗначение);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ЧтениеJSON.Закрыть();
	Возврат ТЗОтвета;
КонецФункции