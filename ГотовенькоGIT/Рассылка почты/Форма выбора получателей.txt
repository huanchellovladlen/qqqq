&НаСервере
Процедура ЗаполнитьТЧСтудентами()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтудентыБГЭУ.email КАК Почта,
	               |	СтудентыБГЭУ.Ссылка КАК ФИО,
	               |	СтудентыБГЭУ.Группа КАК Группа,
	               |	СтудентыБГЭУ.ГруппаПоИнЯзыку КАК ГруппаПоИнЯзыку,
	               |	СтудентыБГЭУ.НомерЗачетнойКнижки КАК НомерЗачетнойКнижки,
	               |	СтудентыБГЭУ.ФормаОбучения КАК ФормаОбучения,
	               |	СтудентыБГЭУ.НазваниеСпециальности КАК НазваниеСпециальности,
	               |	СтудентыБГЭУ.НазваниеСпециализации КАК НазваниеСпециализации,
	               |	СтудентыБГЭУ.Факультет КАК Факультет,
	               |	СтудентыБГЭУ.Курс КАК Курс,
	               |	СтудентыБГЭУ.ГодНабора КАК ГодНабора
	               |ИЗ
	               |	Справочник.СтудентыБГЭУ КАК СтудентыБГЭУ";
	ТЗ = Запрос.Выполнить().Выгрузить();
	ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТЗ, "ТЧ", "ТЧ");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧУчСекретарями()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользователиБазы.ФИОСотрудника.email КАК Почта,
	               |	ПользователиБазы.Ссылка КАК ФИОСокр,
	               |	ПользователиБазы.ФИОСотрудника КАК ФИОПолн,
	               |	ПользователиБазы.Должность КАК Кафедра
	               |ИЗ
	               |	Справочник.ПользователиБазы КАК ПользователиБазы
	               |ГДЕ
	               |	ПользователиБазы.ВыполняемыеФункции.Наименование = ""Ученый секретарь""";
	ТЗ = Запрос.Выполнить().Выгрузить();
	ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТЗ, "ТЧ", "ТЧ");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧЗавКафедр()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Кафедры.ЗаведующийКафедры.email КАК Почта,
	               |	Кафедры.Факультет КАК Факультет,
	               |	Кафедры.Наименование КАК Кафедра,
	               |	Кафедры.ЗаведующийКафедры КАК ЗавКаф,
	               |	Кафедры.Выпускающая КАК Выпускающая,
	               |	Кафедры.НазваниеКафедры КАК НазваниеКаф
	               |ИЗ
	               |	Справочник.Кафедры КАК Кафедры
	               |ГДЕ
	               |	Кафедры.ЭтоГруппа = ЛОЖЬ";
	ТЗ = Запрос.Выполнить().Выгрузить();
	ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТЗ, "ТЧ", "ТЧ");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧСотруд()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.email КАК Почта,
	               |	Сотрудники.Наименование КАК ФИО,
	               |	Сотрудники.ВидПерсонала КАК ВидПерсонала,
	               |	Сотрудники.Должность КАК Должность,
	               |	Сотрудники.Подразделение КАК Подразделение
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники";
	ТЗ = Запрос.Выполнить().Выгрузить();
	ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТЗ, "ТЧ", "ТЧ");
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицуЗначенияВКодеВТаблицуНаФорме(ТабВКоде, ТабРеквизит, ТабНаФорме)
	ТабВКоде.Колонки.Вставить(0, "Пометка", Новый ОписаниеТипов("Булево"));
	
	// 1. добавляем колонки из ТабВкоде в реквизит ТабРеквизит
	НовыеРеквизиты = Новый Массив;
	Для Каждого Колонка Из ТабВКоде.Колонки Цикл
		НовыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ТабРеквизит));
	КонецЦикла;
	ИзменитьРеквизиты(НовыеРеквизиты);
	
	// 2. добавляем колонки из ТабВКоде в элемент ТабНаФорме
	Для Каждого Колонка Из ТабВКоде.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить(ТабРеквизит + "_" + Колонка.Имя, Тип("ПолеФормы"), Элементы[ТабНаФорме]);
		Если Колонка.Имя = "Пометка" Тогда
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;	
		Иначе
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ТолькоПросмотр = Истина;
		КонецЕсли;
		НовыйЭлемент.ПутьКДанным = ТабРеквизит + "." + Колонка.Имя;
	КонецЦикла;

	// 3. наконец, передаём данные из ТабВКоде в ТабРеквизит
	ЗначениеВРеквизитФормы(ТабВКоде, ТабРеквизит);
КонецПроцедуры

&НаКлиенте
Процедура ТЧВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТЧ[ВыбраннаяСтрока].Пометка = Не ТЧ[ВыбраннаяСтрока].Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	Для Каждого СТЗ Из ТЧ Цикл
		СТЗ.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Для Каждого СТЗ Из ТЧ Цикл
		СТЗ.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Заголовок = Параметры.ТипОтбора;
	Если Параметры.ТипОтбора = "Студ" Тогда
		ЗаполнитьТЧСтудентами();
	ИначеЕсли Параметры.ТипОтбора = "УчСек" Тогда
		ЗаполнитьТЧУчСекретарями();
	ИначеЕсли Параметры.ТипОтбора = "ЗавКаф" Тогда
		ЗаполнитьТЧЗавКафедр();
	Иначе
		ЗаполнитьТЧСотруд();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ТабЧасть = ТЧ;	// Нельзя изменять поле, содержащее объект данных формы
	Закрыть(ВернутьТабДокСФормы(ТабЧасть, Заголовок));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьТабДокСФормы(ТЧ, РежимРаботы)
	Получатели = Новый ТабличныйДокумент;
	Макет = Обработки.РассылкаПочты.ПолучитьМакет("МакетПолучателей");
	
	ТабЧасть = ТЧ.Выгрузить(Новый Структура("Пометка", Истина));
	Если ТабЧасть.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если РежимРаботы = "Студ" Тогда
		Получатели.Вывести(Макет.ПолучитьОбласть("ШапкаСтуд"));
		Данные = Макет.ПолучитьОбласть("ДанныеСтуд");
	ИначеЕсли РежимРаботы = "УчСек" Тогда
		Получатели.Вывести(Макет.ПолучитьОбласть("ШапкаУчСек"));
		Данные = Макет.ПолучитьОбласть("ДанныеУчСек");
	ИначеЕсли РежимРаботы = "ЗавКаф" Тогда
		Получатели.Вывести(Макет.ПолучитьОбласть("ШапкаЗавКаф"));
		Данные = Макет.ПолучитьОбласть("ДанныеЗавКаф");
	Иначе
		Получатели.Вывести(Макет.ПолучитьОбласть("ШапкаСотруд"));
		Данные = Макет.ПолучитьОбласть("ДанныеСотруд");
	КонецЕсли;
	
	Для Каждого СТЗ Из ТабЧасть Цикл
		Данные.Параметры.Заполнить(СТЗ);
		Получатели.Вывести(Данные);
	КонецЦикла;
	Возврат Получатели;
КонецФункции

&НаКлиенте
Процедура ПометитьОтобранные(Команда)
	Для Каждого СТЗ Из ТЧ Цикл
        Если Элементы.ТЧ.ПроверитьСтроку(СТЗ.ПолучитьИдентификатор()) Тогда
            СТЗ.Пометка = Истина;
        КонецЕсли;
    КонецЦикла;
КонецПроцедуры